{"ast":null,"code":"const number = password => {\n  for (let i = 0; i < password.length; i++) {\n    if (!(password[i] >= '0' && password[i] <= '9')) {\n      return \"\";\n    }\n  }\n\n  return \"Password should contain a number\";\n};\n\nconst lowerCase = password => {\n  for (let i = 0; i < password.length; i++) {\n    if (password[i] === password[i].toLowerCase() && password[i] !== password[i].toUpperCase()) {\n      return \"\";\n    }\n  }\n\n  return \"Password should contain at least a lowercase letter\";\n};\n\nconst upperCase = password => {\n  for (let i = 0; i < password.length; i++) {\n    if (password[i] !== password[i].toLowerCase() && password[i] === password[i].toUpperCase()) {\n      return \"\";\n    }\n  }\n\n  return \"Password should contain at least an uppercase letter\";\n}; // const specialChar = (password)=>{\n//     var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/\n//         if(!format.test(password)){\n//             string = \"Password should contain at least one special character\"\n//         }\n// }\n\n\nfunction validatePassword(password) {\n  let string = number(password);\n  if (string) string = lowerCase(password);\n  string = upperCase(password);\n  return string;\n}\n\nexport default validatePassword;","map":{"version":3,"sources":["/home/ktrip96/Documents/WebDev/Vodafone/assesment/src/validatePassword.js"],"names":["number","password","i","length","lowerCase","toLowerCase","toUpperCase","upperCase","validatePassword","string"],"mappings":"AAAA,MAAMA,MAAM,GAAIC,QAAD,IAAY;AACvB,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,QAAQ,CAACE,MAA5B,EAAoCD,CAAC,EAArC,EAAwC;AACpC,QAAI,EAAED,QAAQ,CAACC,CAAD,CAAR,IAAa,GAAb,IAAoBD,QAAQ,CAACC,CAAD,CAAR,IAAa,GAAnC,CAAJ,EAA4C;AACxC,aAAO,EAAP;AACH;AACJ;;AACD,SAAO,kCAAP;AACH,CAPD;;AASA,MAAME,SAAS,GAAIH,QAAD,IAAY;AAC1B,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,QAAQ,CAACE,MAA5B,EAAoCD,CAAC,EAArC,EAAwC;AACxC,QAAID,QAAQ,CAACC,CAAD,CAAR,KAAgBD,QAAQ,CAACC,CAAD,CAAR,CAAYG,WAAZ,EAAhB,IAA6CJ,QAAQ,CAACC,CAAD,CAAR,KAAgBD,QAAQ,CAACC,CAAD,CAAR,CAAYI,WAAZ,EAAjE,EAA2F;AACvF,aAAO,EAAP;AACH;AACJ;;AACD,SAAQ,qDAAR;AACC,CAPD;;AASA,MAAMC,SAAS,GAAIN,QAAD,IAAY;AAC1B,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,QAAQ,CAACE,MAA5B,EAAoCD,CAAC,EAArC,EAAwC;AACpC,QAAID,QAAQ,CAACC,CAAD,CAAR,KAAgBD,QAAQ,CAACC,CAAD,CAAR,CAAYG,WAAZ,EAAhB,IAA6CJ,QAAQ,CAACC,CAAD,CAAR,KAAgBD,QAAQ,CAACC,CAAD,CAAR,CAAYI,WAAZ,EAAjE,EAA2F;AACvF,aAAO,EAAP;AACH;AACJ;;AACD,SAAQ,sDAAR;AACH,CAPD,C,CASA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASE,gBAAT,CAA0BP,QAA1B,EAAmC;AAC/B,MAAIQ,MAAM,GAAGT,MAAM,CAACC,QAAD,CAAnB;AACA,MAAGQ,MAAH,EACAA,MAAM,GAAGL,SAAS,CAACH,QAAD,CAAlB;AACAQ,EAAAA,MAAM,GAAGF,SAAS,CAACN,QAAD,CAAlB;AAEA,SAAOQ,MAAP;AAEH;;AAED,eAAeD,gBAAf","sourcesContent":["const number = (password)=>{\n    for(let i = 0; i < password.length; i++){\n        if (!(password[i]>='0' && password[i]<='9')){\n            return \"\"\n        }\n    }\n    return \"Password should contain a number\"\n}\n\nconst lowerCase = (password)=>{\n    for(let i = 0; i < password.length; i++){\n    if (password[i] === password[i].toLowerCase() && password[i] !== password[i].toUpperCase()){\n        return \"\"\n    }\n}\nreturn  \"Password should contain at least a lowercase letter\"\n}\n\nconst upperCase = (password)=>{\n    for(let i = 0; i < password.length; i++){\n        if (password[i] !== password[i].toLowerCase() && password[i] === password[i].toUpperCase()){\n            return \"\"\n        }\n    }\n    return  \"Password should contain at least an uppercase letter\"\n}\n\n// const specialChar = (password)=>{\n//     var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/\n//         if(!format.test(password)){\n//             string = \"Password should contain at least one special character\"\n//         }\n// }\nfunction validatePassword(password){\n    let string = number(password)\n    if(string)\n    string = lowerCase(password)\n    string = upperCase(password)\n    \n    return string\n\n}\n\nexport default validatePassword"]},"metadata":{},"sourceType":"module"}