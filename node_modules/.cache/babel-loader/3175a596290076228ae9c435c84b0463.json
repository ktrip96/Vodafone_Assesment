{"ast":null,"code":"function validatePassword(password) {\n  let string = \"\";\n\n  for (let i = 0; i < password.length; i++) {\n    if (!(password[i] >= '0' && password[i] <= '9')) {\n      string = \"Password should contain a number\";\n    } else if (!(password[i] !== password[i].toLowerCase() && password[i] === password[i].toUpperCase())) {\n      string = \"Password should contain at least an uppercase letter\";\n    } else if (!(password[i] === password[i].toLowerCase() && password[i] !== password[i].toUpperCase())) {\n      string = \"Password should contain at least a lowercase letter\";\n    }\n  } // eslint-disable-next-line\n\n\n  var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n\n  if (!format.test(password)) {\n    string = \"Password should contain at least one special character\";\n  }\n\n  return string;\n}\n\nexport default validatePassword;","map":{"version":3,"sources":["/home/ktrip96/Documents/WebDev/Vodafone/assesment/src/validatePassword.js"],"names":["validatePassword","password","string","i","length","toLowerCase","toUpperCase","format","test"],"mappings":"AAAA,SAASA,gBAAT,CAA0BC,QAA1B,EAAmC;AAC/B,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,QAAQ,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAwC;AACpC,QAAI,EAAEF,QAAQ,CAACE,CAAD,CAAR,IAAa,GAAb,IAAoBF,QAAQ,CAACE,CAAD,CAAR,IAAa,GAAnC,CAAJ,EAA4C;AACxCD,MAAAA,MAAM,GAAG,kCAAT;AACH,KAFD,MAGK,IAAI,EAAED,QAAQ,CAACE,CAAD,CAAR,KAAgBF,QAAQ,CAACE,CAAD,CAAR,CAAYE,WAAZ,EAAhB,IAA6CJ,QAAQ,CAACE,CAAD,CAAR,KAAgBF,QAAQ,CAACE,CAAD,CAAR,CAAYG,WAAZ,EAA/D,CAAJ,EAA8F;AAC/FJ,MAAAA,MAAM,GAAG,sDAAT;AACH,KAFI,MAGA,IAAI,EAAED,QAAQ,CAACE,CAAD,CAAR,KAAgBF,QAAQ,CAACE,CAAD,CAAR,CAAYE,WAAZ,EAAhB,IAA6CJ,QAAQ,CAACE,CAAD,CAAR,KAAgBF,QAAQ,CAACE,CAAD,CAAR,CAAYG,WAAZ,EAA/D,CAAJ,EAA8F;AAC/FJ,MAAAA,MAAM,GAAG,qDAAT;AACH;AACJ,GAZ8B,CAc3B;;;AACA,MAAIK,MAAM,GAAG,0CAAb;;AACA,MAAG,CAACA,MAAM,CAACC,IAAP,CAAYP,QAAZ,CAAJ,EAA0B;AACtBC,IAAAA,MAAM,GAAG,wDAAT;AACH;;AAEL,SAAOA,MAAP;AAEH;;AAED,eAAeF,gBAAf","sourcesContent":["function validatePassword(password){\n    let string = \"\"\n    for(let i = 0; i < password.length; i++){\n        if (!(password[i]>='0' && password[i]<='9')){\n            string = \"Password should contain a number\"\n        }\n        else if (!(password[i] !== password[i].toLowerCase() && password[i] === password[i].toUpperCase())){\n            string = \"Password should contain at least an uppercase letter\"\n        }\n        else if (!(password[i] === password[i].toLowerCase() && password[i] !== password[i].toUpperCase())){\n            string = \"Password should contain at least a lowercase letter\"  \n        }\n    }\n     \n        // eslint-disable-next-line\n        var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/\n        if(!format.test(password)){\n            string = \"Password should contain at least one special character\"\n        }\n\n    return string\n\n}\n\nexport default validatePassword"]},"metadata":{},"sourceType":"module"}