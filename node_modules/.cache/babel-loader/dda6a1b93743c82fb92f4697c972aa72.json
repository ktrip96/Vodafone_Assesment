{"ast":null,"code":"import { useState, useEffect } from \"react\";\nimport validate from './validateForm';\n\nfunction useForm() {\n  const [formData, setFormData] = useState({\n    phone: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [errorData, setErrorData] = useState({});\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData(prevFormData => ({ ...prevFormData,\n      [name]: value\n    }));\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    setErrorData(validate(formData));\n  }\n\n  return {\n    formData,\n    errorData,\n    handleChange,\n    handleSubmit\n  };\n}\n\nexport default useForm;","map":{"version":3,"sources":["/home/ktrip96/Documents/WebDev/Vodafone/assesment/src/useForm.js"],"names":["useState","useEffect","validate","useForm","formData","setFormData","phone","email","password","errorData","setErrorData","handleChange","event","name","value","target","prevFormData","handleSubmit","preventDefault"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AAEA,SAASC,OAAT,GAAkB;AACd,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC;AAACM,IAAAA,KAAK,EAAC,EAAP;AAAUC,IAAAA,KAAK,EAAC,EAAhB;AAAmBC,IAAAA,QAAQ,EAAC;AAA5B,GAAD,CAAxC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;;AAEA,WAASW,YAAT,CAAsBC,KAAtB,EAA4B;AACxB,UAAM;AAACC,MAAAA,IAAD;AAAMC,MAAAA;AAAN,QAAeF,KAAK,CAACG,MAA3B;AACAV,IAAAA,WAAW,CAACW,YAAY,KAAG,EAAC,GAAGA,YAAJ;AAAiB,OAACH,IAAD,GAAOC;AAAxB,KAAH,CAAb,CAAX;AACH;;AAED,WAASG,YAAT,CAAsBL,KAAtB,EAA4B;AACxBA,IAAAA,KAAK,CAACM,cAAN;AACAR,IAAAA,YAAY,CAACR,QAAQ,CAACE,QAAD,CAAT,CAAZ;AACH;;AAED,SAAO;AAACA,IAAAA,QAAD;AAAUK,IAAAA,SAAV;AAAoBE,IAAAA,YAApB;AAAiCM,IAAAA;AAAjC,GAAP;AACH;;AAED,eAAed,OAAf","sourcesContent":["import {useState, useEffect} from \"react\"\nimport validate from './validateForm'\n\nfunction useForm(){\n    const [formData, setFormData] = useState({phone:\"\",email:\"\",password:\"\"})\n    const [errorData, setErrorData] = useState({})\n\n    function handleChange(event){\n        const {name,value} = event.target\n        setFormData(prevFormData=>({...prevFormData,[name]:value}))\n    }\n\n    function handleSubmit(event){\n        event.preventDefault()\n        setErrorData(validate(formData))\n    }\n    \n    return {formData,errorData,handleChange,handleSubmit}\n}\n\nexport default useForm"]},"metadata":{},"sourceType":"module"}