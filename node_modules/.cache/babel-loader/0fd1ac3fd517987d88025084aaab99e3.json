{"ast":null,"code":"var _jsxFileName = \"/home/ktrip96/Documents/WebDev/Vodafone/assesment/src/Section2.js\";\nimport React, { useState, useRef } from \"react\";\nimport useForm from \"./useForm\";\nexport default function Section2(props) {\n  const {\n    formData,\n    errorData,\n    handleChange,\n    handleSubmit\n  } = useForm();\n  const {\n    services\n  } = props;\n  const [percentage, setPercentage] = useState({\n    first: `${services.stats[0].amount}`,\n    second: `${services.stats[1].amount}`,\n    third: `${services.stats[2].amount}`,\n    fourth: `${services.stats[3].amount}`\n  });\n  const inputRef = useRef(null);\n  const active = '#64c3ef';\n  const inactive = '#dbdbdb';\n  const styleInput = {\n    background: `linear-gradient(90deg, ${active} 0% ${percentage.first / 10}%,   ${inactive} ${percentage.first / 1}% 100%)`\n  };\n\n  function handlePercentage(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setPercentage(prevPercentage => ({ ...prevPercentage,\n      [name]: value\n    }));\n    const newBackgroundStyle = `linear-gradient(90deg, ${active} 0% ${percentage.name / 10}%,   ${inactive} ${percentage.name / 10}% 100%)`;\n    inputRef.current.style.background = newBackgroundStyle;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"section2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"box slider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    id: \"slider-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, services.title), /*#__PURE__*/React.createElement(\"h1\", {\n    id: \"slider-graph\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, services.graphText), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"slider-percentage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"percentage1 \", percentage.first / 10, \"%\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputRef,\n    type: \"range\",\n    min: \"0\",\n    max: \"1000\",\n    name: \"first\",\n    className: \"percentage1\",\n    style: styleInput,\n    defaultValue: percentage.first,\n    onChange: handlePercentage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"slider-percentage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"percentage2 \", percentage.second / 10, \"%\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    min: \"0\",\n    max: \"1000\",\n    name: \"second\",\n    defaultValue: percentage.second,\n    onChange: handlePercentage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"slider-percentage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"percentage3 \", percentage.third / 10, \"%\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    min: \"0\",\n    max: \"1000\",\n    name: \"third\",\n    defaultValue: percentage.third,\n    onChange: handlePercentage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"slider-percentage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"percentage4 \", percentage.fourth / 10, \"%\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    min: \"0\",\n    max: \"1000\",\n    name: \"fourth\",\n    defaultValue: percentage.fourth,\n    onChange: handlePercentage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"box form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"validate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, services.formText), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"We work with ecosystem leaders, corporations and startups worldwide.\"), /*#__PURE__*/React.createElement(\"p\", {\n    id: \"marg-bot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"How can we help you?\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"submitting-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: `${errorData.phone && \"error-border\"}`,\n    type: \"text\",\n    placeholder: services.formLabels[0],\n    name: \"phone\",\n    value: formData.phone,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }), errorData.phone && /*#__PURE__*/React.createElement(\"p\", {\n    id: \"err\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 31\n    }\n  }, errorData.phone), /*#__PURE__*/React.createElement(\"input\", {\n    className: `${errorData.email && \"error-border\"}`,\n    type: \"text\",\n    placeholder: services.formLabels[1],\n    name: \"email\",\n    value: formData.email,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }), errorData.email && /*#__PURE__*/React.createElement(\"p\", {\n    id: \"err\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 31\n    }\n  }, errorData.email), /*#__PURE__*/React.createElement(\"input\", {\n    className: `${errorData.password && \"error-border\"}`,\n    type: \"password\",\n    placeholder: services.formLabels[2],\n    name: \"password\",\n    value: formData.password,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }), errorData.password && /*#__PURE__*/React.createElement(\"p\", {\n    id: \"err\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 34\n    }\n  }, errorData.password), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, services.buttonText))));\n}","map":{"version":3,"sources":["/home/ktrip96/Documents/WebDev/Vodafone/assesment/src/Section2.js"],"names":["React","useState","useRef","useForm","Section2","props","formData","errorData","handleChange","handleSubmit","services","percentage","setPercentage","first","stats","amount","second","third","fourth","inputRef","active","inactive","styleInput","background","handlePercentage","event","name","value","target","prevPercentage","newBackgroundStyle","current","style","title","graphText","formText","phone","formLabels","email","password","buttonText"],"mappings":"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","sourcesContent":["import React, { useState,useRef } from \"react\"\nimport useForm from \"./useForm\"\n\nexport default function Section2(props) {\n  const { formData, errorData, handleChange, handleSubmit } = useForm()\n  const { services } = props\n\n  const [percentage, setPercentage] = useState({\n    first: `${services.stats[0].amount}`,\n    second: `${services.stats[1].amount}`,\n    third: `${services.stats[2].amount}`,\n    fourth: `${services.stats[3].amount}`,\n  })\n  const inputRef = useRef(null)\n\n  const active = '#64c3ef'\n  const inactive = '#dbdbdb'\n\n  const styleInput = {\n    background: `linear-gradient(90deg, ${active} 0% ${percentage.first / 10}%,   ${inactive} ${percentage.first / 1}% 100%)`,\n }\n\n  function handlePercentage(event) {\n    const { name, value } = event.target\n    setPercentage((prevPercentage) => ({ ...prevPercentage, [name]: value }))\n    const newBackgroundStyle = `linear-gradient(90deg, ${active} 0% ${percentage.name / 10}%,   ${inactive} ${percentage.name / 10}% 100%)`\n    inputRef.current.style.background = newBackgroundStyle\n  }\n\n  \n\n  return (\n    <div className=\"section2\">\n      {/* Percentage Slider */}\n\n      <div className=\"box slider\">\n        <h4 id=\"slider-title\">{services.title}</h4>\n        <h1 id=\"slider-graph\">{services.graphText}</h1>\n        <h2 className=\"slider-percentage\">\n          percentage1 {percentage.first / 10}%\n        </h2>\n        <input\n          ref = {inputRef}\n          type=\"range\"\n          min=\"0\"\n          max=\"1000\"\n          name=\"first\"\n          className=\"percentage1\"\n          style={styleInput}\n          defaultValue={percentage.first}\n          onChange={handlePercentage}\n        />\n        <h2 className=\"slider-percentage\">\n          percentage2 {percentage.second / 10}%\n        </h2>\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"1000\"\n          name=\"second\"\n          defaultValue={percentage.second}\n          onChange={handlePercentage}\n        />\n        <h2 className=\"slider-percentage\">\n          percentage3 {percentage.third / 10}%\n        </h2>\n\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"1000\"\n          name=\"third\"\n          defaultValue={percentage.third}\n          onChange={handlePercentage}\n        />\n        <h2 className=\"slider-percentage\">\n          percentage4 {percentage.fourth / 10}%\n        </h2>\n\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"1000\"\n          name=\"fourth\"\n          defaultValue={percentage.fourth}\n          onChange={handlePercentage}\n        />\n      </div>\n\n      {/* Validate Form */}\n\n      <div className=\"box form\">\n        <h2 className=\"validate\">{services.formText}</h2>\n        <p>\n          We work with ecosystem leaders, corporations and startups worldwide.\n        </p>\n        <p id=\"marg-bot\">How can we help you?</p>\n        <form onSubmit={handleSubmit} className=\"submitting-form\">\n          <input\n            className={`${errorData.phone && \"error-border\"}`}\n            type=\"text\"\n            placeholder={services.formLabels[0]}\n            name=\"phone\"\n            value={formData.phone}\n            onChange={handleChange}\n          />\n          {errorData.phone && <p id=\"err\">{errorData.phone}</p>}\n          <input\n            className={`${errorData.email && \"error-border\"}`}\n            type=\"text\"\n            placeholder={services.formLabels[1]}\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n          />\n          {errorData.email && <p id=\"err\">{errorData.email}</p>}\n          <input\n            className={`${errorData.password && \"error-border\"}`}\n            type=\"password\"\n            placeholder={services.formLabels[2]}\n            name=\"password\"\n            value={formData.password}\n            onChange={handleChange}\n          />\n          {errorData.password && <p id=\"err\">{errorData.password}</p>}\n          <button>{services.buttonText}</button>\n        </form>\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}