{"ast":null,"code":"function validPassword(password) {\n  const number = () => {\n    for (let i = 0; i < password.length; i++) {\n      if (password[i] >= '0' && password[i] <= '9') {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  const upperCase = () => {\n    for (let i = 0; i < password.length; i++) {\n      if (password[i] !== password[i].toLowerCase() && password[i] === password[i].toUpperCase()) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  const lowerCase = () => {\n    for (let i = 0; i < password.length; i++) {\n      if (password[i] === password[i].toLowerCase() && password[i] !== password[i].toUpperCase()) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  const specialChar = () => {\n    // eslint-disable-next-line\n    var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n    return format.test(password);\n  };\n\n  return number && upperCase && lowerCase && specialChar ? true : false;\n}\n\nfunction validate(formData) {\n  let errors = {}; // ***phone errors***\n\n  if (!formData.phone) {\n    errors.phone = \"Phone number is required\";\n  } else if (formData.phone.length !== 10) {\n    errors.phone = \"Phone number should have 10 digits\";\n  } else if (formData.phone.charAt(0) !== '2' || formData.phone.charAt(0) != '6') {\n    errors.phone = \"First digit of the phone number should be 2 or 6\";\n  } // ***email errors***\n\n\n  if (!formData.email) {\n    errors.email = \"Email is required\";\n  } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n    errors.email = \"Please give a valid email\";\n  } // ***password errors***\n\n\n  if (!formData.password) {\n    errors.password = \"Password is required\";\n  } else if (formData.password.length < 9) {\n    errors.password = \"Password needs to be more than 8 characters\";\n  } else if (!validPassword(formData.password)) {\n    errors.password = \"Password should include atleast:a number,a capitalletter,a symbol and a low case letter.\";\n  }\n\n  return errors;\n}\n\nexport default validate;","map":{"version":3,"sources":["/home/ktrip96/Documents/WebDev/Vodafone/assesment/src/validateForm.js"],"names":["validPassword","password","number","i","length","upperCase","toLowerCase","toUpperCase","lowerCase","specialChar","format","test","validate","formData","errors","phone","charAt","email"],"mappings":"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","sourcesContent":["function validPassword(password){\n    const number = () => {\n        for(let i = 0; i < password.length; i++){\n            if (password[i]>='0' && password[i]<='9'){\n                return true\n            }\n        }\n        return false\n    }\n\n    const upperCase = ()=>{\n        for(let i = 0; i < password.length; i++){\n            if (password[i] !== password[i].toLowerCase() && password[i] === password[i].toUpperCase()){\n                return true\n            }\n        }\n        return false\n    }\n\n    const lowerCase = ()=>{\n        for(let i = 0; i < password.length; i++){\n            if (password[i] === password[i].toLowerCase() && password[i] !== password[i].toUpperCase()){\n                return true\n            }\n        }\n        return false\n    }\n\n    const specialChar = () =>{\n        // eslint-disable-next-line\n        var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/\n        return format.test(password)\n    }\n\n    return (number&&upperCase&&lowerCase&&specialChar?true:false)\n\n}\n\nfunction validate(formData){\n    let errors = {}\n\n    // ***phone errors***\n\n    if(!formData.phone){\n        errors.phone = \"Phone number is required\"\n    }\n    else if(formData.phone.length !== 10){\n        errors.phone = \"Phone number should have 10 digits\"\n    }\n    else if(formData.phone.charAt(0)!=='2' || formData.phone.charAt(0)!= '6'){\n        errors.phone = \"First digit of the phone number should be 2 or 6\"\n    }\n    \n    // ***email errors***\n\n    if(!formData.email){\n        errors.email = \"Email is required\"\n    }\n    else if(!/\\S+@\\S+\\.\\S+/.test(formData.email)){\n        errors.email = \"Please give a valid email\"\n    }\n\n    // ***password errors***\n\n    if(!formData.password){\n        errors.password = \"Password is required\"\n    }\n    else if(formData.password.length < 9){\n        errors.password = \"Password needs to be more than 8 characters\"\n    }\n    else if(!validPassword(formData.password)){\n        errors.password = \"Password should include atleast:a number,a capitalletter,a symbol and a low case letter.\"\n    }\n\n    return errors\n}\n\nexport default validate"]},"metadata":{},"sourceType":"module"}