{"ast":null,"code":"function validatePassword(password) {\n  let string = \"\";\n\n  for (let i = 0; i < password.length; i++) {\n    if (!(password[i] >= '0' && password[i] <= '9')) {\n      string = \"Password should contain a number\";\n    }\n  }\n\n  for (let i = 0; i < password.length; i++) {\n    if (!(password[i] !== password[i].toLowerCase() && password[i] === password[i].toUpperCase())) {\n      string = \"Password should contain an uppercase letter\";\n    }\n  }\n\n  for (let i = 0; i < password.length; i++) {\n    if (!(password[i] === password[i].toLowerCase() && password[i] !== password[i].toUpperCase())) {\n      string = \"\";\n    }\n\n    return true;\n  }\n\n  const specialChar = () => {\n    // eslint-disable-next-line\n    var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n    return format.test(password);\n  };\n\n  return string;\n}\n\nexport default validatePassword;","map":{"version":3,"sources":["/home/ktrip96/Documents/WebDev/Vodafone/assesment/src/validatePassword.js"],"names":["validatePassword","password","string","i","length","toLowerCase","toUpperCase","specialChar","format","test"],"mappings":"AAAA,SAASA,gBAAT,CAA0BC,QAA1B,EAAmC;AAC/B,MAAIC,MAAM,GAAG,EAAb;;AACI,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,QAAQ,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAwC;AACpC,QAAI,EAAEF,QAAQ,CAACE,CAAD,CAAR,IAAa,GAAb,IAAoBF,QAAQ,CAACE,CAAD,CAAR,IAAa,GAAnC,CAAJ,EAA4C;AACxCD,MAAAA,MAAM,GAAG,kCAAT;AACH;AACJ;;AAGD,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,QAAQ,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAwC;AACpC,QAAI,EAAEF,QAAQ,CAACE,CAAD,CAAR,KAAgBF,QAAQ,CAACE,CAAD,CAAR,CAAYE,WAAZ,EAAhB,IAA6CJ,QAAQ,CAACE,CAAD,CAAR,KAAgBF,QAAQ,CAACE,CAAD,CAAR,CAAYG,WAAZ,EAA/D,CAAJ,EAA8F;AAC1FJ,MAAAA,MAAM,GAAG,6CAAT;AACH;AACJ;;AAID,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGF,QAAQ,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAwC;AACpC,QAAI,EAAEF,QAAQ,CAACE,CAAD,CAAR,KAAgBF,QAAQ,CAACE,CAAD,CAAR,CAAYE,WAAZ,EAAhB,IAA6CJ,QAAQ,CAACE,CAAD,CAAR,KAAgBF,QAAQ,CAACE,CAAD,CAAR,CAAYG,WAAZ,EAA/D,CAAJ,EAA8F;AAC1FJ,MAAAA,MAAM,GAAG,EAAT;AACH;;AAAA,WAAO,IAAP;AACJ;;AAGL,QAAMK,WAAW,GAAG,MAAK;AACrB;AACA,QAAIC,MAAM,GAAG,0CAAb;AACA,WAAOA,MAAM,CAACC,IAAP,CAAYR,QAAZ,CAAP;AACH,GAJD;;AAMA,SAAOC,MAAP;AAEH;;AAED,eAAeF,gBAAf","sourcesContent":["function validatePassword(password){\n    let string = \"\"\n        for(let i = 0; i < password.length; i++){\n            if (!(password[i]>='0' && password[i]<='9')){\n                string = \"Password should contain a number\"\n            }\n        }\n    \n\n        for(let i = 0; i < password.length; i++){\n            if (!(password[i] !== password[i].toLowerCase() && password[i] === password[i].toUpperCase())){\n                string = \"Password should contain an uppercase letter\"\n            }\n        }\n   \n\n   \n        for(let i = 0; i < password.length; i++){\n            if (!(password[i] === password[i].toLowerCase() && password[i] !== password[i].toUpperCase())){\n                string = \"\"\n            }return true\n        }\n     \n\n    const specialChar = () =>{\n        // eslint-disable-next-line\n        var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/\n        return format.test(password)\n    }\n\n    return string\n\n}\n\nexport default validatePassword"]},"metadata":{},"sourceType":"module"}